name: ðŸš€ SmartFailureOps CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: ðŸ”§ Build e Teste
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Clonar repositÃ³rio
        uses: actions/checkout@v4

      - name: â˜• Configurar Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: ðŸ§± Build com Maven
        run: mvn -B clean package --file lambda/pom.xml

      - name: ðŸ§ª Executar testes (se houver)
        run: mvn test --file lambda/pom.xml

  deploy:
    name: ðŸš€ Deploy para AWS Lambda
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: ðŸ“¥ Clonar repositÃ³rio
        uses: actions/checkout@v4

      - name: â˜• Configurar Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: ðŸ§° Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: ðŸ“¦ Fazer upload do pacote Lambda
        run: |
          cd lambda/target
          aws lambda update-function-code \
            --function-name VivoLambdaFalhas \
            --zip-file fileb://vivo-lambda-falhas-1.0-SNAPSHOT.jar

      - name: âœ… Confirmar Deploy
        run: aws lambda get-function --function-name VivoLambdaFalhas

